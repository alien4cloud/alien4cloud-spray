apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: {{ host }}
  annotations:
{% if ingress_class is defined and ingress_class != "" %}
    kubernetes.io/ingress.class: {{ ingress_class }}
{% endif %}
{% if a4c_protocol == "https" %}
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
{% endif %}
{% if a4c_url_path is defined and a4c_url_path != "" %}
    nginx.ingress.kubernetes.io/rewrite-target: /$1
{% endif %}
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "1000"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "1000"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "1000"
spec:
  rules:
  - host: {{ host }}
    http:
      paths:
      - backend:
          serviceName: a4csvc
          servicePort: a4c-endpoint
{% if a4c_url_path is defined and a4c_url_path != "" %}
        path: {{ a4c_url_path }}/(.*)
{% else %}
        path: /
{% endif %}
        pathType: Prefix
{% if k8s.a4c.create_secret is defined and k8s.a4c.create_secret %}
  tls:
  - hosts:
    - {{ host }}
    secretName: {{ host }}-tls
{% endif %}
