
- name: Ensure logs directory exists
  become: true
  file:
    path: "{{ a4c_log_dir }}"
    state: directory
    owner: "{{ a4c_user }}"

- name: Init elasticsearch cluster host list
  set_fact :
    es_node_list: []

- name: Define if ES is embeded or not
  set_fact:
    es_embedded: "{{ groups['elasticsearch'] | length == 0 }}"

- name: Loop over the elasticsearch group
  set_fact:
    es_node_list: "{{ es_node_list + [ 'localhost' ] }}"
  when: es_embedded

- name: Loop over the elasticsearch group
  set_fact:
    es_node_list: "{{ es_node_list + [ item + appendable_private_domain_name + ':' + elasticsearch_transport_port|string ] }}"
  with_items: "{{ groups['elasticsearch'] }}"
  when: >
    not es_embedded and (
      (inventory_hostname != item and use_localhost_for_local_connections)
      or not use_localhost_for_local_connections
    )

- name: Loop over the elasticsearch group (only for localhost)
  set_fact:
    es_node_list: "{{ es_node_list + [ 'localhost:' + elasticsearch_transport_port|string ] }}"
  with_items: "{{ groups['elasticsearch'] }}"
  when: >
    not es_embedded and (
      use_localhost_for_local_connections and inventory_hostname == item
    )

- name: Ensure a4c_config_added variable exists
  set_fact:
    a4c_config_addons: {}
  when: (a4c_config_addons is not defined)

# - name: Feed a4c_config_added variable
#   set_fact:
#     a4c_config_added: "{{ a4c_config_addons | to_nice_yaml(indent=2) }}"
#   when: (a4c_config_addons is defined)


- name: Define consul agent address
  set_fact:
    ha_consulAgentIp: "{{ inventory_hostname }}{{ appendable_private_domain_name }}"

- name: Use localhost for consul agent address
  set_fact:
    ha_consulAgentIp: "127.0.0.1"
  when: (use_localhost_for_local_connections)

- name: Define consul agent health check address
  set_fact:
    ha_instanceIp: "{{ inventory_hostname }}{{ appendable_private_domain_name }}"

- name: Define consul agent health check address (the IP consul will use to health check A4C)
  set_fact:
    ha_instanceCheckIp: "{{ inventory_hostname }}{{ appendable_private_domain_name }}"

- name: Use localhost for consul agent health check address
  set_fact:
    ha_instanceCheckIp: "localhost"
  when: (use_localhost_for_local_connections)

- name: Configure A4C
  template:
    src: alien4cloud-config.yml.j2
    dest: "{{ a4c_install_dir }}/alien4cloud/config/alien4cloud-config.yml"
    force: yes
  become: true
  become_user: "{{ a4c_user }}"

- name: Slurp the a4c config file
  slurp:
    src: "{{ a4c_install_dir }}/alien4cloud/config/alien4cloud-config.yml"
  become: true
  become_user: "{{ a4c_user }}"
  register: a4c_config_slurped

- name: Decode a4c config
  set_fact:
    a4c_config_slurped: "{{ a4c_config_slurped['content'] | b64decode | from_yaml }}"

- name: Add 'a4c_config_addons' to A4C config
  set_fact:
    a4c_config_slurped: "{{ a4c_config_slurped|combine(a4c_config_addons, recursive=True) }}"

- name: Serialize a4c config
  copy:
    content: "{{ a4c_config_slurped | to_nice_yaml(indent=2) }}"
    dest: "{{ a4c_install_dir }}/alien4cloud/config/alien4cloud-config.yml"
  become: true
  become_user: "{{ a4c_user }}"

- name: Configure A4C embeded ES
  template:
    src: elasticsearch.yml.j2
    dest: "{{ a4c_install_dir }}/alien4cloud/config/elasticsearch.yml"
    force: yes
  become: true
  become_user: "{{ a4c_user }}"
  when: es_embedded

- name: Configure A4C logs
  template:
    src: log4j2.xml.j2
    dest: "{{ a4c_install_dir }}/alien4cloud/config/log4j2.xml"
    force: yes
  become: true
  become_user: "{{ a4c_user }}"

- name: Empty a4c ssl directory
  file:
    state: absent
    path: "{{ a4c_install_dir }}/alien4cloud/config/ssl"
  become: true
  become_user: "{{ a4c_user }}"

- name: Creates a4c ssl directory
  become: true
  file:
    path: "{{ a4c_install_dir }}/alien4cloud/config/ssl"
    state: directory
    owner: "{{ a4c_user }}"
  when: (elasticsearch_tls) or (a4c_protocol == 'https') or (yorc_tls) or (_consul_tls)

- name: Copy CA cert file
  copy:
    src: "{{ inventory_dir }}/{{ certificates_path }}/{{ ssl_ca_cert_name }}"
    dest: "{{ a4c_install_dir }}/alien4cloud/config/ssl/{{ ssl_ca_cert_name }}"
  become: true
  become_user: "{{ a4c_user }}"
  when: (elasticsearch_tls) or (a4c_protocol == 'https') or (yorc_tls) or (_consul_tls)

- name: Copy host key file
  copy:
    src: "{{ inventory_dir }}/{{ certificates_path }}/{{ inventory_hostname }}{{ ssl_host_key_suffix }}"
    dest: "{{ a4c_install_dir }}/alien4cloud/config/ssl/{{ inventory_hostname }}{{ ssl_host_key_suffix }}"
  become: true
  become_user: "{{ a4c_user }}"
  when: (elasticsearch_tls) or (a4c_protocol == 'https') or (yorc_tls) or (_consul_tls)

- name: Copy host cert file
  copy:
    src: "{{ inventory_dir }}/{{ certificates_path }}/{{ inventory_hostname }}{{ ssl_host_cert_suffix }}"
    dest: "{{ a4c_install_dir }}/alien4cloud/config/ssl/{{ inventory_hostname }}{{ ssl_host_cert_suffix }}"
  become: true
  become_user: "{{ a4c_user }}"
  when: (elasticsearch_tls) or (a4c_protocol == 'https') or (yorc_tls) or (_consul_tls)

- name: Find the firts jre cacerts trustore
  shell: "find / -name cacerts | grep jre | head -n 1"
  become: true
  register: find_cacerts_command_output
  when: (elasticsearch_tls) or (a4c_protocol == 'https') or (yorc_tls) or (_consul_tls)

- name: Define the cacerts path
  set_fact :
    cacerts_path: "{{ find_cacerts_command_output.stdout |trim }}"
  when: (elasticsearch_tls) or (a4c_protocol == 'https') or (yorc_tls) or (_consul_tls)

- fail:
    msg: "Not able to locate any cacerts truststore !"
  when: ((elasticsearch_tls) or (a4c_protocol == 'https') or (yorc_tls) or (_consul_tls)) and (cacerts_path == "")

- name: Copy cacerts truststore
  copy:
    src: "{{ cacerts_path }}"
    remote_src: yes
    dest: "{{ a4c_install_dir }}/alien4cloud/config/ssl/server-truststore.jks"
  become: true
  become_user: "{{ a4c_user }}"
  when: (elasticsearch_tls) or (a4c_protocol == 'https') or (yorc_tls) or (_consul_tls)

- name: Prepare CA certificate to be imported into truststore
  shell: "openssl x509 -outform der -in {{ ssl_ca_cert_name }} -out ca-cert.der"
  become: true
  become_user: "{{ a4c_user }}"
  args:
    chdir: "{{ a4c_install_dir }}/alien4cloud/config/ssl"
  when: (elasticsearch_tls) or (a4c_protocol == 'https') or (yorc_tls) or (_consul_tls)

- name: Import CA certificate into truststore
  become: true
  become_user: "{{ a4c_user }}"
  shell: "keytool -import -alias alien4cloud -keystore server-truststore.jks -file ca-cert.der -storepass changeit -noprompt"
  args:
    chdir: "{{ a4c_install_dir }}/alien4cloud/config/ssl"
  when: (elasticsearch_tls) or (a4c_protocol == 'https') or (yorc_tls) or (_consul_tls)

- name: Generate server keystore using openssl
  become: true
  become_user: "{{ a4c_user }}"
  shell: "openssl pkcs12 -export -name alien4cloud -in {{ inventory_hostname }}{{ ssl_host_cert_suffix }} -inkey {{ inventory_hostname }}{{ ssl_host_key_suffix }} -out server-keystore.p12 -chain -CAfile {{ ssl_ca_cert_name }} -caname root -password pass:changeit"
  args:
    chdir: "{{ a4c_install_dir }}/alien4cloud/config/ssl"
  when: (elasticsearch_tls) or (a4c_protocol == 'https') or (yorc_tls) or (_consul_tls)

- name: Export server keystore using keytool
  become: true
  become_user: "{{ a4c_user }}"
  shell: "keytool -importkeystore -destkeystore server-keystore.jks -srckeystore server-keystore.p12 -srcstoretype pkcs12 -alias alien4cloud -deststorepass changeit -srcstorepass changeit"
  args:
    chdir: "{{ a4c_install_dir }}/alien4cloud/config/ssl"
  when: (elasticsearch_tls) or (a4c_protocol == 'https') or (yorc_tls) or (_consul_tls)

- name: Append -Djavax.net.ssl... JVM options for Yorc TLS trustore and keystore
  become: true
  become_user: "{{ a4c_user }}"
  lineinfile:
    path: "{{ a4c_install_dir }}/alien4cloud/alien4cloud.sh"
    insertbefore: '^\$JAVA \$JAVA_OPTIONS \$JAVA_EXT_OPTIONS.*'
    line: "JAVA_EXT_OPTIONS=\"$JAVA_EXT_OPTIONS -Djavax.net.ssl.keyStore={{ a4c_install_dir }}/alien4cloud/config/ssl/server-keystore.jks -Djavax.net.ssl.keyStorePassword=changeit  -Djavax.net.ssl.trustStore={{ a4c_install_dir }}/alien4cloud/config/ssl/server-truststore.jks -Djavax.net.ssl.trustStorePassword=changeit\""
  when: (yorc_tls)

- name: Ensure log4j configuration is set
  become: true
  become_user: "{{ a4c_user }}"
  lineinfile:
    path: "{{ a4c_install_dir }}/alien4cloud/alien4cloud.sh"
    insertbefore: '^\$JAVA \$JAVA_OPTIONS \$JAVA_EXT_OPTIONS.*'
    line: "JAVA_EXT_OPTIONS=\"$JAVA_EXT_OPTIONS -Dlog4j.configurationFile=log4j2.xml\""
