---
- set_fact:
    alien_url: "{{ a4c_protocol }}://{{ a4c_ip }}:{{ a4c_port }}"

- set_fact:
    url: "{{ alien_url }}/login?username={{ a4c_admin_usr }}&password={{ a4c_admin_pwd }}&submit=Login"

- name: "Login onto A4C using {{url}}"
  uri:
    url: "{{url}}"
    method: POST
    return_content: yes
    validate_certs: no
    status_code: 302
    timeout: 120
    headers:
      Content-Type: "application/x-www-form-urlencoded"
  register: login

- set_fact:
    session_id: "{{ login.set_cookie.split(';')[0] }}"

- name: Get orchestrator configuration
  uri:
    url: "{{ alien_url }}/rest/latest/orchestrators/{{ orchestratorId }}/configuration"
    method: GET
    return_content: yes
    validate_certs: no
    HEADER_cookie: "{{ session_id }}"
    status_code: 200
    timeout: 120
  register: result

- debug:
    var: result.json

- set_fact:
    content: "{{ result.content }}"
- set_fact:
    orchestratorConfiguration: "{{ content.data.configuration }}"

- debug:
    var: orchestratorConfiguration

- name: Create temporary file to store config
  tempfile:
    state: file
    suffix: yorc_orchestrator_config
  register: yorc_orchestrator_config_file

- copy:
    content: "{{ orchestratorConfiguration }}"
    dest: "{{ yorc_orchestrator_config_file.path }}"

- name: Store consul key in a local file
  fetch:
    src: "{{ yorc_orchestrator_config_file.path }}"
    dest: "{{ yorc_orchestrator_config_file_path }}"
    flat: yes
    validate_checksum: no

- name: Finally remove temporary folder
  file:
    path: "{{ yorc_orchestrator_config_file_path.path }}"
    state: absent
