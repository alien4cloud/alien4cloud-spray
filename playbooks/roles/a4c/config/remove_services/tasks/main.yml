---

- name: Create temporary folder
  tempfile:
    state: directory
  register: temp_dir

- name: "Upload artifact {{ data_dir }}/{{ resources_file_artifact }} on remote in {{ temp_dir.path }}/resources.yaml"
  copy:
    src: "{{ data_dir }}/{{ resources_file_artifact }}"
    dest: "{{ temp_dir.path }}/resources.yaml"

- name: "Stat {{ temp_dir.path }}/resources.yaml"
  stat: path="{{ temp_dir.path }}/resources.yaml"
  register: resources_file

- name: Slurp resources files
  slurp:
    src: "{{ temp_dir.path }}/resources.yaml"
  register: resources_slurped
  when: resources_file.stat.exists

- set_fact:
    resources_yaml: "{{resources_slurped['content'] | b64decode | from_yaml}}"
- debug:
    var: resources_yaml

- set_fact:
    resources: "{{resources_yaml['services']}}"
- debug:
    var: resources

- debug:
    msg: "{{item}}"
  with_items: "{{resources}}"

- name: login
  uri:
    url: "{{ alien_url }}/login?username={{ a4c_admin_usr }}&password={{ a4c_admin_pwd }}&submit=Login"
    method: POST
    return_content: yes
    validate_certs: no
    status_code: 302
    headers:
      Content-Type: "application/x-www-form-urlencoded"
  register: login

- set_fact:
    session_id: "{{ login.set_cookie.split(';')[0] }}"

- name: Get services
  uri:
    url: "{{ alien_url }}/rest/latest/services/adv/search"
    method: POST
    return_content: yes
    validate_certs: no
    HEADER_cookie: "{{ session_id }}"
    body:
      query: "{{ item['name'] }}"
      from: 0
      size: 50
    body_format: json
    status_code: 200
  register: result
  with_items: "{{resources}}"

- debug:
    var: result

# TODO: get id and patch services with attribute values

- set_fact:
    resourceIds: []
- name: Populate resourceIds
  set_fact:
    resourceIds: "{{ resourceIds }}  + ['{{item['json']['data']['data'][0]['id']}}']"
  ignore_errors: yes
  with_items: "{{result['results']}}"
  when: "{{item['json']['data']['data'] |length > 0 }}"

- debug:
    var: resourceIds

- name: Delete services
  uri:
    url: "{{ alien_url }}/rest/latest/services/{{item}}"
    method: DELETE
    return_content: yes
    validate_certs: no
    HEADER_cookie: "{{ session_id }}"
    status_code: 200
  with_items: "{{resourceIds}}"

- name: Finally remove temporary folder
  file:
    path: "{{ temp_dir.path }}"
    state: absent
