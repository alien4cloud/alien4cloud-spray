---
- hosts: "consul:consulfront:yorc:yorcfront:elasticsearch:a4c:a4cfront:jmeter"
  name: Install all common dependencies
  roles:
    - commons/install-common-dependencies
    - commons/add_dns_server

- hosts: consul
  name: Install configure and start consul.
  roles:
    - commons/define_commons_vars
    - consul/stop-consul
    - consul/install-consul
    - consul/configure-consul-gossip-keygen
    - { role: consul/configure-consul, consul_mode: 'server' }
    - consul/start-consul

- hosts: elasticsearch
  name: Install configure and start Elasticsearch.
  gather_facts: no
  roles:
    - commons/define_commons_vars
    - elasticsearch/stop-elasticsearch
    - install-java-dist
    - elasticsearch/install-elasticsearch
    - elasticsearch/configure-elasticsearch
    - elasticsearch/start-elasticsearch

- hosts: consulfront
  name: Install consul front (Nginx).
  gather_facts: no
  roles:
    - commons/define_commons_vars
    - nginx/stop-nginx
    - nginx/install-nginx
    - consul/configure-nginx
    - nginx/start-nginx

- hosts: yorc
  name: Install configure and start Yorc.
  roles:
    - commons/define_commons_vars
    - { role: commons/define_commons_vars, consul_agent_for: 'yorc' }
    - yorc/stop-yorc
    - consul/stop-consul
    - yorc/install-dependencies
    - consul/install-consul
    - { role: consul/configure-consul, consul_mode: 'client', consul_agent_for: 'yorc' }
    - install-java-dist
    - yorc/install-yorc
    - yorc/configure-yorc
    - spark/install-spark
    - { role: spark/define-spark-home, spark_user_var: 'yorc_user' }
    - consul/start-consul

- hosts: yorc
  name: Setup rsync for Yorc.
  roles:
    - commons/define_commons_vars
    - { role: rsync/stop-consul-template, component_name: 'yorc' }
    - { role: rsync/install-rsync, component_name: 'yorc' }
    - { role: rsync/generate_keypair, component_name: 'yorc' }
    - { role: rsync/add_public_keys, component_name: 'yorc' }
    - { role: rsync/install-consul-template, component_name: 'yorc' }
    - { role: rsync/configure-consul-template, component_name: 'yorc' }
    - { role: rsync/schedule-sync, component_name: 'yorc' }
    - { role: consul/start-consul, component_name: 'yorc' }
    - { role: rsync/start-consul-template, component_name: 'yorc' }

- hosts: yorc
  name: Install configure and start Yorc.
  roles:
    - commons/define_commons_vars
    - yorc/start-yorc
    - yorc/configure-hp

- hosts: yorcfront
  name: Install Yorc front (Nginx).
  gather_facts: no
  roles:
    - commons/define_commons_vars
    - yorc/stop-consul-template
    - consul/stop-consul
    - nginx/stop-nginx
    - nginx/install-nginx
    - yorc/configure-nginx
    - nginx/start-nginx
    - consul/install-consul
    - { role: consul/configure-consul, consul_mode: 'client', consul_agent_for: 'yorcfront' }
    - consul/start-consul
    - yorc/install-consul-template
    - yorc/configure-consul-template
    - yorc/start-consul-template


- hosts: a4c
  name: Eventually migrate a4c working directory
  gather_facts: no
  # gather_facts: no
  # we want this operation to be executed sequencially
  serial: 1
  roles:
    - commons/define_commons_vars
    - a4c/migrate-a4c-working-dir

- hosts: a4c
  name: Install and configure A4C
  gather_facts: yes
  roles:
    - { role: commons/define_commons_vars, consul_agent_for: 'a4c' }
    - consul/stop-consul
    - a4c/stop-a4c
    - install-java-dist
    - a4c/install-a4c
    - consul/install-consul
    - { role: consul/configure-consul, consul_mode: 'client', consul_agent_for: 'a4c' }
    - a4c/configure-a4c
    - { role: a4c/config/define_a4c_url, should_login: false }
    - a4c/configure-saml
    - consul/start-consul

- hosts: a4cfront
  name: Install A4C front (Nginx, consul and consul-template)
  gather_facts: yes
  roles:
    - { role: commons/define_commons_vars, consul_agent_for: 'a4cfront' }
    - nginx/stop-nginx
    - a4c_front/stop-consul-template
    - consul/stop-consul
    - nginx/install-nginx
    - consul/install-consul
    - { role: consul/configure-consul, consul_mode: 'client', consul_agent_for: 'a4cfront' }
    - a4c_front/configure-nginx
    - a4c_front/install-consul-template
    - a4c_front/configure-consul-template
    - consul/start-consul
    - nginx/start-nginx
    - a4c_front/start-consul-template

- hosts: a4c
  name: Setup rsync for A4C.
  roles:
    - { role: rsync/stop-consul-template, component_name: 'a4c' }
    - commons/define_commons_vars
    - { role: rsync/install-rsync, component_name: 'a4c' }
    - { role: rsync/generate_keypair, component_name: 'a4c' }
    - { role: rsync/add_public_keys, component_name: 'a4c' }
    - { role: rsync/install-consul-template, component_name: 'a4c' }
    - { role: rsync/configure-consul-template, component_name: 'a4c' }
    - { role: rsync/schedule-sync, component_name: 'a4c' }
    - { role: consul/start-consul, component_name: 'a4c' }
    - { role: rsync/start-consul-template, component_name: 'a4c' }



- hosts: a4c
  name: Start A4C
  gather_facts: no
  # we want each A4C to be started sequencially in case of HA
  serial: 1
  roles:
    - { role: a4c/config/define_a4c_url, should_login: false }
    - a4c/start-a4c
    - a4c/config/wait_a4c_fullstart

- hosts: a4cconfig
  name: Setup A4C with a Yorc orchestrator.
  become: false
  roles:
    - commons/define_commons_vars
    - a4c/config/define_a4c_url
      # Orchestrator & Location
    - { role: 'a4c/config/get_orchectrator',
        orchestratorName: 'Yorc'
      }
    - { role: 'a4c/config/create_orchestrator',
        orchestratorName: 'Yorc',
        pluginId: 'alien4cloud-yorc-provider',
        pluginBean: 'yorc-orchestrator-factory'
      }
    # - { role: 'a4c/config/create_location',
    #     location_name: 'Default',
    #     location_type: 'HostsPool'
    #   }
    # - { role: 'a4c/config/create_location_resources',
    #     resources_file_artifact: 'resources/location_resources.yaml'
    #   }
    - a4c/config/disable_plugins
    # - { role: 'a4c/config/create_location_modifiers',
    #     orchestratorName: 'Yorc',
    #     location_name: 'Default'
    #   }
    - a4c/config/order_location_modifiers_it
    - { role: 'a4c/config/create_metaproperties',
        resources_file_artifact: 'resources/metaproperties.yaml'
      }
    - { role: 'a4c/config/create_and_configure_locations',
        orchestratorName: 'Yorc'
      }
    - a4c/config/git_var
    - a4c/config/download_upload_csars
    - a4c/config/upload_csars
    # - { role: 'commons/parse_kubeconfig',
    #     resources_file_artifact: 'resources/kubeconfig'
    #   }
    # - { role: 'a4c/config/create_services',
    #     resources_file_artifact: 'resources/services.yaml'
    #   }

- hosts: a4c
  name: Rename init directory
  gather_facts: yes
  become: false
  roles:
    - a4c/rename-init

# - hosts: a4cconfig
#   name: Test the setup deploying an application based on mocks.
#   gather_facts: yes
#   become: false
#   roles:
#     - commons/define_commons_vars
#     - a4c/config/define_a4c_url
#     - { role: 'a4c/config/get_orchectrator',
#         orchestratorName: 'Yorc'
#       }
#     - { role: 'a4c/config/get_location',
#         location_name: 'Default'
#       }
#     - a4c/config/test_application_deployment
#     # - { role: 'a4c/config/test_application_deployment',
#     #     topologyTemplateVersionId: '1TinyMock:2.1.0-SNAPSHOT',
#     #     applicationName: 'SetupTestApp'
#     #   }

- hosts: jmeter
  name: Install loadtests
  roles:
    - commons/define_commons_vars
    - a4c/config/define_a4c_url
    - install-java
    - loadtests/install-loadtests
    - loadtests/configure-loadtests
    - loadtests/start-loadtests
