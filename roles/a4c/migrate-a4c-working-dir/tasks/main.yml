
- name: Ensure the 'a4c_working_dir' variable is defined
  set_fact :
    a4c_working_dir: "{{ a4c_install_dir }}/runtime"
  when: a4c_working_dir is not defined
  
- name: Check if a4c condif already exist
  stat:
    path: "{{ a4c_install_dir }}/alien4cloud/config/alien4cloud-config.yml"
  register: a4c_conf_result
  become: true
  become_user: "{{ a4c_user }}"

- name: Slurp the consul config file
  become: true
  become_user: "{{ a4c_user }}"
  slurp:
    src: "{{ a4c_install_dir }}/alien4cloud/config/alien4cloud-config.yml"
  register: a4c_config
  when: a4c_conf_result.stat.exists

- name: Decode a4c config
  set_fact:
    a4c_config: "{{ a4c_config['content'] | b64decode | from_yaml }}"
  when: a4c_conf_result.stat.exists

- name: Get the actual working directory
  set_fact:
    actual_a4c_working_dir: "{{ a4c_config.directories.alien }}"
  when: a4c_conf_result.stat.exists

- name: Here is the actual a4c working directory
  debug:
    var: actual_a4c_working_dir

- name: Ensure the 'a4c_working_dir' exists
  set_fact :
    a4c_working_dir: "{{ a4c_install_dir }}/runtime"
  when: a4c_working_dir is not defined

- name: Check if a4c actual working directory exist
  stat:
    path: "{{ actual_a4c_working_dir }}"
  register: actual_working_directory_stat
  become: true
  become_user: "{{ a4c_user }}"

- name: Check if expected a4c_working_dir is empty
  find:
    paths: "{{ a4c_working_dir }}/"
  register: a4c_working_dir_find

- name: Define a variable indicating if expected working directory is empty
  set_fact:
     a4c_working_dir_is_empty: "{{ a4c_working_dir_find.matched == 0 }}"

- name: "Copy actual working directory content '{{ actual_a4c_working_dir }}' to expected one '{{ a4c_working_dir }}'"
  become: true
  become_user: "{{ a4c_user }}"
  shell: "cp -rfp {{ actual_a4c_working_dir }}/* {{ a4c_working_dir }}/"
  # copy:
  #   remote_src: yes
  #   src: "{{ actual_a4c_working_dir }}/"
  #   dest: "{{ a4c_working_dir }}"
  #   mode: preserve
  #   backup: no
  when: (a4c_conf_result.stat.exists) and (a4c_working_dir != actual_a4c_working_dir) and (actual_working_directory_stat.stat.isdir is defined and actual_working_directory_stat.stat.isdir) and (a4c_working_dir_is_empty)

- name: Clean the actual working directory
  become: true
  shell: "rm -rf {{ actual_a4c_working_dir }}/*"
  when: (a4c_conf_result.stat.exists) and (a4c_working_dir != actual_a4c_working_dir) and (actual_working_directory_stat.stat.isdir is defined and actual_working_directory_stat.stat.isdir) and (a4c_working_dir_is_empty)

- name: Actual working directory is as expected
  debug:
    msg: "Actual working directory '{{ actual_a4c_working_dir }}' is as expected '{{ a4c_working_dir }}' (nothing to do !)"
  when: (a4c_conf_result.stat.exists) and (a4c_working_dir == actual_a4c_working_dir)
