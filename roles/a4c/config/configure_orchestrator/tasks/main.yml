---
- set_fact:
    alien_url: "{{ a4c_protocol }}://{{ a4c_ip }}:{{ a4c_port }}"

- set_fact:
    url: "{{ alien_url }}/login?username={{ a4c_admin_usr }}&password={{ a4c_admin_pwd }}&submit=Login"

- name: "Login onto A4C using {{url}}"
  uri:
    url: "{{url}}"
    method: POST
    return_content: yes
    validate_certs: no
    status_code: 302
    timeout: 120
    headers:
      Content-Type: "application/x-www-form-urlencoded"
  register: login

- set_fact:
    session_id: "{{ login.set_cookie.split(';')[0] }}"

- name: Get orchestrator configuration
  uri:
    url: "{{ alien_url }}/rest/latest/orchestrators/{{ orchestratorId }}/configuration"
    method: GET
    return_content: yes
    validate_certs: no
    HEADER_cookie: "{{ session_id }}"
    status_code: 200
    timeout: 120
  register: result

- debug:
    var: result.json

- set_fact:
    content: "{{ result.content }}"
- set_fact:
    orchestratorConfiguration: "{{ content.data.configuration }}"

- debug:
    var: orchestratorConfiguration
#
# - name: Update orchestrator deployment name pattern
#   uri:
#     url: "{{ alien_url }}/rest/latest/orchestrators/{{ orchestratorId }}"
#     method: PUT
#     return_content: yes
#     validate_certs: no
#     HEADER_cookie: "{{ session_id }}"
#     HEADER_Content-Type: "application/json"
#     body:
#       deploymentNamePattern: "('{{ discriminator }}-' + application.name + '-' + environment.name).replaceAll('[^\\w\\-_]', '_')"
#     body_format: json
#     status_code: 200
#   register: result

- name: Define yorc host
  set_fact:
    yorc_host: "{{ groups['yorc'][0] }}"

- name: Use 'localhost' if a4c and yorc are co-hosted
  set_fact:
    yorc_host: "localhost"
  when: "{{ yorc_host == inventory_hostname }}"

# TODO: adapt scheme if secured
- name: Define yorc url
  set_fact:
    yorc_url: "http://{{ yorc_host }}:8800"

- name: Add 'urlYorc' to orchestrator config
  set_fact:
    orchestratorConfiguration: "{{ orchestratorConfiguration|combine({'urlYorc': yorc_url}) }}"

- name: Here is the Orchestrtator configure to be set
  debug:
    var: orchestratorConfiguration

# - name: Configure orchestrator
#   uri:
#     url: "{{ alien_url }}/rest/latest/orchestrators/{{ orchestratorId }}/configuration"
#     method: PUT
#     validate_certs: no
#     HEADER_cookie: "{{ session_id }}"
#     HEADER_Content-Type: "application/json"
#     body: "{{ orchestratorConfiguration | to_json }}"
#     body_format: json
#     status_code: 200
