
- name: Ensure a4c_ha_enabled variable is defined
  set_fact:
    a4c_ha_enabled: "{{ groups['a4c'] | length > 1 }}"

- name: Is the HA enabled ?
  debug:
    var: a4c_ha_enabled

- name: Ensure yorc_tls variable is defined
  set_fact:
    yorc_tls: false
  when: yorc_tls is not defined

- name: The 'yorc_tls' variable defines if yorc should be secured
  debug:
    var: yorc_tls

- name: Ensure consul_tls variable is defined
  set_fact:
    consul_tls: false
  when: consul_tls is not defined

- name: The 'consul_tls' variable defines if consul http connections should be secured
  debug:
    var: consul_tls

- name: Ensure logs directory exists
  become: true
  file:
    path: "{{ a4c_log_dir }}"
    state: directory
    owner: "{{ a4c_user }}"

- name: Init elasticsearch cluster host list
  set_fact :
    es_node_list: []

- name: Loop over the elasticsearch group
  set_fact:
    es_node_list: "{{ es_node_list + [ item + appendable_private_domain_name + ':9300' ] }}"
  with_items: "{{ groups['elasticsearch'] }}"
  # when: inventory_hostname != item

# - name: Loop over the elasticsearch group (only for localhost)
#   set_fact:
#     es_node_list: "{{ es_node_list + [ 'localhost:9300' ] }}"
#   with_items: "{{ groups['elasticsearch'] }}"
#   when: inventory_hostname == item

- name: Ensure a4c_config_added variable exists
  set_fact:
    a4c_config_added: ""
  when: (a4c_config_addons is not defined)

- name: Feed a4c_config_added variable
  set_fact:
    a4c_config_added: "{{ a4c_config_addons | to_nice_yaml(indent=2) }}"
  when: (a4c_config_addons is defined)


# Parser la conf si elle exists
# trouver directories.alien
# si elle est diff√©rent du actual a4c_install_dir
#   alors: tout copier dans le nouveau (ou move)


- name: Check if a4c condif already exist
  stat:
    path: "{{ a4c_install_dir }}/alien4cloud/config/alien4cloud-config.yml"
  register: a4c_conf_result
  become: true
  become_user: "{{ a4c_user }}"

- name: Slurp the consul config file
  become: true
  become_user: "{{ a4c_user }}"
  slurp:
    src: "{{ a4c_install_dir }}/alien4cloud/config/alien4cloud-config.yml"
  register: a4c_config
  when: a4c_conf_result.stat.exists

- name: Decode a4c config
  set_fact:
    a4c_config: "{{ a4c_config['content'] | b64decode | from_yaml }}"
  when: a4c_conf_result.stat.exists

- name: Get the actual working directory
  set_fact:
    actual_a4c_working_dir: "{{ a4c_config.directories.alien }}"
  when: a4c_conf_result.stat.exists

- name: Here is the actual a4c working directory
  debug:
    var: actual_a4c_working_dir

- name: Ensure the 'a4c_working_dir' exists
  set_fact :
    a4c_working_dir: "{{ a4c_install_dir }}/runtime"
  when: a4c_working_dir is not defined

- name: "Copy actual working directory content '{{ actual_a4c_working_dir }}' to expected one '{{ a4c_working_dir }}'"
  become: true
  become_user: "{{ a4c_user }}"
  copy:
    src: "{{ actual_a4c_working_dir }}/"
    dest: "{{ a4c_working_dir }}"
    mode: preserve
    backup: no
  when: (a4c_conf_result.stat.exists) and (a4c_working_dir != actual_a4c_working_dir)

- name: Clean the old working directory
  become: true
  shell: "rm -rf {{ actual_a4c_working_dir }}/*"
  when: (a4c_conf_result.stat.exists) and (a4c_working_dir != actual_a4c_working_dir)

- name: Actual working directory is as expected
  debug:
    msg: "Actual working directory '{{ actual_a4c_working_dir }}' is as expected '{{ a4c_working_dir }}' (nothing to do !)"
  when: (a4c_conf_result.stat.exists) and (a4c_working_dir == actual_a4c_working_dir)

- name: Configure A4C
  template:
    src: alien4cloud-config.yml.j2
    dest: "{{ a4c_install_dir }}/alien4cloud/config/alien4cloud-config.yml"
    force: yes
  become: true
  become_user: "{{ a4c_user }}"

- name: Configure A4C logs
  template:
    src: log4j2.xml.j2
    dest: "{{ a4c_install_dir }}/alien4cloud/config/log4j2.xml"
    force: yes
  become: true
  become_user: "{{ a4c_user }}"

- name: Empty a4c ssl directory
  file:
    state: absent
    path: "{{ a4c_install_dir }}/alien4cloud/config/ssl"
  become: true
  become_user: "{{ a4c_user }}"

- name: Creates a4c ssl directory
  become: true
  file:
    path: "{{ a4c_install_dir }}/alien4cloud/config/ssl"
    state: directory
    owner: "{{ a4c_user }}"
  when: (elasticsearch_tls) or (a4c_protocol == 'https') or (yorc_tls) or (consul_tls)

- name: Copy CA cert file
  copy:
    src: "{{ inventory_dir }}/{{ certificates_path }}/{{ ssl_ca_cert_name }}"
    dest: "{{ a4c_install_dir }}/alien4cloud/config/ssl/{{ ssl_ca_cert_name }}"
  become: true
  become_user: "{{ a4c_user }}"
  when: (elasticsearch_tls) or (a4c_protocol == 'https') or (yorc_tls) or (consul_tls)

- name: Copy host key file
  copy:
    src: "{{ inventory_dir }}/{{ certificates_path }}/{{ inventory_hostname }}{{ ssl_host_key_suffix }}"
    dest: "{{ a4c_install_dir }}/alien4cloud/config/ssl/{{ inventory_hostname }}{{ ssl_host_key_suffix }}"
  become: true
  become_user: "{{ a4c_user }}"
  when: (elasticsearch_tls) or (a4c_protocol == 'https') or (yorc_tls) or (consul_tls)

- name: Copy host cert file
  copy:
    src: "{{ inventory_dir }}/{{ certificates_path }}/{{ inventory_hostname }}{{ ssl_host_cert_suffix }}"
    dest: "{{ a4c_install_dir }}/alien4cloud/config/ssl/{{ inventory_hostname }}{{ ssl_host_cert_suffix }}"
  become: true
  become_user: "{{ a4c_user }}"
  when: (elasticsearch_tls) or (a4c_protocol == 'https') or (yorc_tls) or (consul_tls)

- name: Find the firts jre cacerts trustore
  shell: "find / -name cacerts | grep jre | head -n 1"
  become: true
  register: find_cacerts_command_output
  when: (elasticsearch_tls) or (a4c_protocol == 'https') or (yorc_tls) or (consul_tls)

- name: Define the cacerts path
  set_fact :
    cacerts_path: "{{ find_cacerts_command_output.stdout |trim }}"
  when: (elasticsearch_tls) or (a4c_protocol == 'https') or (yorc_tls) or (consul_tls)

- fail:
    msg: "Not able to locate any cacerts truststore !"
  when: ((elasticsearch_tls) or (a4c_protocol == 'https') or (yorc_tls) or (consul_tls)) and (cacerts_path == "")

- name: Copy cacerts truststore
  copy:
    src: "{{ cacerts_path }}"
    remote_src: yes
    dest: "{{ a4c_install_dir }}/alien4cloud/config/ssl/server-truststore.jks"
  become: true
  become_user: "{{ a4c_user }}"
  when: (elasticsearch_tls) or (a4c_protocol == 'https') or (yorc_tls) or (consul_tls)

- name: Prepare CA certificate to be imported into truststore
  shell: "openssl x509 -outform der -in {{ ssl_ca_cert_name }} -out ca-cert.der"
  become: true
  become_user: "{{ a4c_user }}"
  args:
    chdir: "{{ a4c_install_dir }}/alien4cloud/config/ssl"
  when: (elasticsearch_tls) or (a4c_protocol == 'https') or (yorc_tls) or (consul_tls)

- name: Import CA certificate into truststore
  become: true
  become_user: "{{ a4c_user }}"
  shell: "keytool -import -alias alien4cloud -keystore server-truststore.jks -file ca-cert.der -storepass changeit -noprompt"
  args:
    chdir: "{{ a4c_install_dir }}/alien4cloud/config/ssl"
  when: (elasticsearch_tls) or (a4c_protocol == 'https') or (yorc_tls) or (consul_tls)

- name: Generate server keystore using openssl
  become: true
  become_user: "{{ a4c_user }}"
  shell: "openssl pkcs12 -export -name alien4cloud -in {{ inventory_hostname }}{{ ssl_host_cert_suffix }} -inkey {{ inventory_hostname }}{{ ssl_host_key_suffix }} -out server-keystore.p12 -chain -CAfile {{ ssl_ca_cert_name }} -caname root -password pass:changeit"
  args:
    chdir: "{{ a4c_install_dir }}/alien4cloud/config/ssl"
  when: (elasticsearch_tls) or (a4c_protocol == 'https') or (yorc_tls) or (consul_tls)

- name: Export server keystore using keytool
  become: true
  become_user: "{{ a4c_user }}"
  shell: "keytool -importkeystore -destkeystore server-keystore.jks -srckeystore server-keystore.p12 -srcstoretype pkcs12 -alias alien4cloud -deststorepass changeit -srcstorepass changeit"
  args:
    chdir: "{{ a4c_install_dir }}/alien4cloud/config/ssl"
  when: (elasticsearch_tls) or (a4c_protocol == 'https') or (yorc_tls) or (consul_tls)

- name: Append -Djavax.net.ssl... JVM options for Yorc TLS trustore and keystore
  become: true
  become_user: "{{ a4c_user }}"
  lineinfile:
    path: "{{ a4c_install_dir }}/alien4cloud/alien4cloud.sh"
    insertbefore: '^\$JAVA \$JAVA_OPTIONS \$JAVA_EXT_OPTIONS.*'
    line: "JAVA_EXT_OPTIONS=\"$JAVA_EXT_OPTIONS -Djavax.net.ssl.keyStore={{ a4c_install_dir }}/alien4cloud/config/ssl/server-keystore.jks -Djavax.net.ssl.keyStorePassword=changeit  -Djavax.net.ssl.trustStore={{ a4c_install_dir }}/alien4cloud/config/ssl/server-truststore.jks -Djavax.net.ssl.trustStorePassword=changeit\""
  when: (yorc_tls)

- name: Ensure log4j configuration is set
  become: true
  become_user: "{{ a4c_user }}"
  lineinfile:
    path: "{{ a4c_install_dir }}/alien4cloud/alien4cloud.sh"
    insertbefore: '^\$JAVA \$JAVA_OPTIONS \$JAVA_EXT_OPTIONS.*'
    line: "JAVA_EXT_OPTIONS=\"$JAVA_EXT_OPTIONS -Dlog4j.configurationFile=log4j2.xml\""
