
# - name: Get the a4c install directory
#   set_fact :
#     a4c_install_dir: "{{ ansible_env.HOME }}/a4c"
#   when: a4c_install_dir is not defined

# - name: Ensure a4c_ha_enabled variable is defined
#   set_fact:
#     a4c_ha_enabled: "{{ groups['a4c'] | length > 1 }}"
#
# - name: Is the HA enabled ?
#   debug:
#     var: a4c_ha_enabled
#
# - name: Ensure 'a4c_ha_first' variable is defined
#   set_fact:
#     a4c_ha_first: "{{ groups['a4c'].index(inventory_hostname) == 0 }}"
#   when: (a4c_ha_enabled)
#
# - name: Is this the first A4C in the list in case of HA ?
#   debug:
#     var: a4c_ha_first
#   when: (a4c_ha_enabled)

- name: Start service a4c
  service:
    name: a4c
    state: started
  become: true

- set_fact:
    alien_url: "{{ a4c_protocol }}://localhost:{{ a4c_port }}/rest/admin/health"

- name: "Wait for a4c to be reachable at {{ alien_url }}"
  uri:
    url: "{{ alien_url }}"
    method: GET
    return_content: yes
    validate_certs: no
    status_code: 200
  register: result
  until: result.status == 200
  retries: 10
  delay: 20
  ignore_errors: yes

- name: Fail when A4C is not reachable at {{ alien_url }}
  fail:
    msg: "Not able to reach A4C at {{ alien_url }} after 10 retries !"
  when: (result.status != 200)

# - name: Check if init directory exists
#   stat:
#     path: "{{ a4c_install_dir }}/alien4cloud/init"
#   register: a4c_init_stat_result
#
# - name: Rename the init directory
#   command: "mv {{ a4c_install_dir }}/alien4cloud/init {{ a4c_install_dir }}/alien4cloud/_init"
#   when: "{{ a4c_init_stat_result.stat.exists }}"
#   become: true
#   become_user: "{{ a4c_user }}"
