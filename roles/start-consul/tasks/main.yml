- name: Ensure consul_tls variable is defined
  set_fact:
    consul_tls: false
  when: consul_tls is not defined

- name: The 'consul_tls' variable defines if consul http connections should be secured
  debug:
    var: consul_tls

- name: Count consul hosts
  set_fact :
    CONSUL_HOST_COUNT: "{{ groups['consul'] | length }}"

- name: Get the consul install directory
  set_fact :
    consul_install_dir: "{{ ansible_env.HOME }}/consul"
  when: consul_install_dir is not defined

- name: Start consul
  service:
    name: consul
    state: started
    enabled: yes
  become: true
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: Ensure consul is running
  command: systemctl status consul
  ignore_errors: false
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: Start consul
  shell:
    chdir: "{{ consul_install_dir }}"
    cmd: nohup consul agent -config-file ./server-config.json &
  when: ansible_distribution != 'CentOS' and ansible_distribution != 'Red Hat Enterprise Linux'

- name: Ensure consul is running
  shell:
    cmd: ps -ef |grep consul |grep -v grep
  when: ansible_distribution != 'CentOS' and ansible_distribution != 'Red Hat Enterprise Linux'

- name: Loop over the consul group to join cluster
  shell: "{{ consul_install_dir }}/consul join {{ item }}"
  with_items: "{{ groups['consul'] }}"
  when: inventory_hostname != item and CONSUL_HOST_COUNT > 1 and (not consul_tls)

- name: Define CA file path
  set_fact:
    ca_file_path: "{{ consul_install_dir }}/ssl/ca-cert.pem"
  when: (consul_tls)

- name: Define host key file path
  set_fact:
    hostkey_file_path: "{{ consul_install_dir }}/ssl/{{ inventory_hostname }}-key.pem"
  when: (consul_tls)

- name: Define host cert file path
  set_fact:
    hostcert_file_path: "{{ consul_install_dir }}/ssl/{{ inventory_hostname }}-cert.pem"
  when: (consul_tls)

- name: Loop over the consul group to join cluster
  shell: "{{ consul_install_dir }}/consul join -http-addr='https://{{inventory_hostname}}:8501' -ca-file={{ca_file_path}} -client-cert={{hostcert_file_path}} -client-key={{hostkey_file_path}} {{ item }}"
  with_items: "{{ groups['consul'] }}"
  when: inventory_hostname != item and CONSUL_HOST_COUNT > 1 and (consul_tls)
