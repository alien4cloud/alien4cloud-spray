
# - name: Get the a4c install directory
#   set_fact :
#     a4c_install_dir: "{{ ansible_env.HOME }}/a4c"
#   when: a4c_install_dir is not defined

- name: Start service a4c
  service:
    name: a4c
    state: started
  become: true
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: Start application A4C
  shell:
    chdir: "{{ a4c_install_dir }}/alien4cloud"
    cmd: nohup ./alien4cloud.sh > alien_nohup.log 2>&1 & echo $! > alien.pid
  when: ansible_distribution != 'CentOS' and ansible_distribution != 'Red Hat Enterprise Linux'

- set_fact:
    alien_url: "{{ a4c_protocol }}://localhost:{{ a4c_port }}/rest/admin/health"

- name: "Wait for a4c to be reachable at {{ alien_url }}"
  uri:
    url: "{{ alien_url }}"
    method: GET
    return_content: yes
    validate_certs: no
    status_code: 200
  register: result
  until: result.status == 200
  retries: 10
  delay: 10
  ignore_errors: yes

- name: Check if init directory exists
  stat:
    path: "{{ a4c_install_dir }}/alien4cloud/init"
  register: a4c_init_stat_result

- name: Rename the init directory
  command: "mv {{ a4c_install_dir }}/alien4cloud/init {{ a4c_install_dir }}/alien4cloud/_init"
  when: "{{ a4c_init_stat_result.stat.exists }}"

- name: Ensure a crontab is initialized
  cron:
    name: "InitCrontab"
    minute: "0"
    hour: "0"
    job: "ls -alh > /dev/null"

- name: Remove init job from crontab
  cron:
    name: "InitCrontab"
    state: absent
