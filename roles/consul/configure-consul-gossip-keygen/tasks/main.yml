
- name: Get the consul install directory
  set_fact :
    consul_install_dir: "{{ ansible_env.HOME }}/consul"
  when: consul_install_dir is not defined

- name: Ensure consul_gossip_encrypt variable is defined
  set_fact:
    consul_gossip_encrypt: false
  when: consul_gossip_encrypt is not defined

- name: The 'consul_gossip_encrypt' variable defines if the gossip traffic should be encrypted
  debug:
    var: consul_gossip_encrypt

- name: Locally Check for consul key file
  local_action: "stat path={{ inventory_dir }}/{{ consul_gossip_encrypt_key_path }}"
  register: stat_consul_gossip_encrypt_key_path
  when: (consul_gossip_encrypt)

- name: Define a variable telling us if a Consul gossip encrypt file already exist
  set_fact:
    consul_gossip_encrypt_key_file_exists: "{{ stat_consul_gossip_encrypt_key_path.stat.exists }}"
  when: (consul_gossip_encrypt)

- name: Print a message if the consul encrypt key already exists
  debug:
    msg: "The consul encrypt key can be found locally in {{ inventory_dir }}/{{ consul_gossip_encrypt_key_path }}, let's use it !"
  when: (consul_gossip_encrypt) and (consul_gossip_encrypt_key_file_exists)

- name: Create temporary file to store consul key
  tempfile:
    state: file
    suffix: temp
  register: consul_key_file
  when: (consul_gossip_encrypt) and (not consul_gossip_encrypt_key_file_exists)


# TODO: if a {{ consul_install_dir }}/data/serf/local.keyring file exists it may contain a key

- name: Generate Consul key
  command: "{{ consul_install_dir }}/consul keygen"
  register: consul_key_command_output
  when: (consul_gossip_encrypt) and (not consul_gossip_encrypt_key_file_exists)

- name: Echo Consul key into a file
  shell: "echo '{\"encrypt\" : \"{{ consul_key_command_output.stdout }}\"}' >> {{ consul_key_file.path }}"
  when: (consul_gossip_encrypt) and (not consul_gossip_encrypt_key_file_exists)

- name: Debug Consul key
  command: "cat {{ consul_key_file.path }}"
  when: (consul_gossip_encrypt) and (not consul_gossip_encrypt_key_file_exists)

- name: Store consul key in a local file
  fetch:
    src: "{{ consul_key_file.path }}"
    dest: "{{ inventory_dir }}/{{ consul_gossip_encrypt_key_path }}"
    flat: yes
    validate_checksum: no
  when: (consul_gossip_encrypt) and (not consul_gossip_encrypt_key_file_exists)
